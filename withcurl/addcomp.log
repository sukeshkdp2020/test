/* ****************************************
 

Granite.author - Seems to contains information related to author modes
========================================================

Granite.author.components - Gives all the components list.

Granite.author.selection.selected - Gives all the selected components list. (We will pick first one)

Granite.author.editables.getParent - Gives the parent component for a given selected component.

Granite.author.editableHelper.doInsert - Method that can be used to add component to the author page.

Below helper methods based on - /apps/core/wcm/components/commons/editor/dialog/childreneditor/v1/childreneditor/clientlibs/js/childreneditor.js
To get the allowed components list - getAllowedComponentsBL()

To add a component using the path of the component to be added
   - addComponentBL('/apps/dexter/components/content/title');

*********************************** */

let getAllowedComponentsBL = function () {
	const ns = Granite.author;

	const editable= ns.selection.selected[0];
	console.log("Selected component - ", editable);

	const parent = ns.editables.getParent(editable);
	console.log("Selected parent component - ", parent);

	const allowedComponents = ns.components.computeAllowedComponents(parent, ns.pageDesign);
	console.log("Selected parent allowed components - ", allowedComponents);

	// This is filter code based on Granite
    const components = ns.components.allowedComponents.sort(ns.components.sortComponents);
    const filteredAllowedComponents = [];

    components.forEach(function(c) {
        const cfg = c.componentConfig;
        const componentAbsolutePath = c.componentConfig.path
          , componentRelativePath = componentAbsolutePath.replace(/^\/[a-z]+\//, "");
        if (allowedComponents.indexOf(componentAbsolutePath) > -1 || 
	        allowedComponents.indexOf(componentRelativePath) > -1 || 
	        allowedComponents.indexOf("group:" + c.getGroup()) > -1) {
            filteredAllowedComponents.push({
	            title: c.componentConfig.title,
	            path: c.componentConfig.path,
	            resourceType: c.componentConfig.resourceType,
            });
        }
    });
	console.log("Allowed list for Selected parent component allow - ", filteredAllowedComponents);

	return filteredAllowedComponents;
}

let addComponentBL = function (resourceType) {
	const ns = Granite.author;
	const editable= ns.selection.selected[0];
	console.log("Selected component - ", editable);

	const component = ns.components.find(resourceType);
	if (component.length > 0) {
		ns.editableHelper.actions.INSERT.execute(component[0], ns.persistence.PARAGRAPH_ORDER.before, editable)
	}
}
